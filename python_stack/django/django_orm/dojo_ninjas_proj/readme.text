
 'query': <django.db.models.sql.query.Query at 0x7f349e12b650>,
 '_result_cache': None,
 '_sticky_filter': False,
 '_for_write': False,
 '_prefetch_related_lookups': [],
 '_prefetch_done': False,
 '_known_related_objects': {},
 '_iterable_class': django.db.models.query.ModelIterable,
 '_fields': None}

In [7]: all_dojos.values                                                        
Out[7]: <bound method QuerySet.values of <QuerySet [<Dojo: Dojo object>, <Dojo: Dojo object>, <Dojo: Dojo object>]>>

In [8]:                                                                         
Do you really want to exit ([y]/n)? y
(newDjango) zackary@Zackary-Ubuntu:~$ python Desktop/Dojo_assignments/python_stack/django/django_orm/dojo_ninjas_proj/manage.py makemigrations
No changes detected
(newDjango) zackary@Zackary-Ubuntu:~$ python Desktop/Dojo_assignments/python_stack/django/django_orm/dojo_ninjas_proj/manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, dojo_ninjas_app, sessions
Running migrations:
  No migrations to apply.
(newDjango) zackary@Zackary-Ubuntu:~$ python Desktop/Dojo_assignments/python_stack/django/django_orm/dojo_ninjas_proj/manage.py shell
Python 3.7.4 (default, Oct 13 2019, 14:46:54) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: ?                                                                       

In [2]: all                                                                     
Out[2]: <function all(iterable, /)>

In [3]: del_dojos = Dojo.objects.get(id = "1")                                  
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-3-1df375a8e62c> in <module>
----> 1 del_dojos = Dojo.objects.get(id = "1")

NameError: name 'Dojo' is not defined

In [4]: from apps.dojo_ninja_project.models import *                            
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
<ipython-input-4-9470b3f52c61> in <module>
----> 1 from apps.dojo_ninja_project.models import *

ModuleNotFoundError: No module named 'apps.dojo_ninja_project'

In [5]: from apps.dojo_ninjas_project.models import *                           
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
<ipython-input-5-feac9687f45f> in <module>
----> 1 from apps.dojo_ninjas_project.models import *

ModuleNotFoundError: No module named 'apps.dojo_ninjas_project'

In [6]: from apps.dojo_ninjas_proj.models import *                              
---------------------------------------------------------------------------
ModuleNotFoundError                       Traceback (most recent call last)
<ipython-input-6-9efa42b8187d> in <module>
----> 1 from apps.dojo_ninjas_proj.models import *

ModuleNotFoundError: No module named 'apps.dojo_ninjas_proj'

In [7]: from apps.dojo_ninjas_app.models import *                               

In [8]: crud = Dojo.objects.get(id = '3')                                       

In [9]: crud.delete()                                                           
Out[9]: (1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})

In [10]: crud = Dojo.objects.get(id = '1')                                      

In [11]: crud.delete()                                                          
Out[11]: (1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})

In [12]: crud = Dojo.objects.get(id = '2')                                      

In [13]: crud.delete()                                                          
Out[13]: (1, {'dojo_ninjas_app.Ninja': 0, 'dojo_ninjas_app.Dojo': 1})

In [14]: Dojo.objects.create(name="this", city="is", state="Sparta")            
Out[14]: <Dojo: Dojo object>

In [15]: Dojo = Dojo.objects.get(name = 'this')                                 

In [16]: print("something", Dojo.created_at)                                    
something 2019-11-09 05:57:55.879814+00:00

In [17]: print("something", Dojo.city)                                          
something is

In [18]: print(Dojo.city)                                                       
is

In [19]: print(Dojo.name)                                                       
this

In [20]: print.all()                                                            
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-20-06f53ee04cbb> in <module>
----> 1 print.all()

AttributeError: 'builtin_function_or_method' object has no attribute 'all'

In [21]: print(Dojo)                                                            
Dojo object

In [22]: print(Dojo.all)                                                        
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-22-308aa23ac0fe> in <module>
----> 1 print(Dojo.all)

AttributeError: 'Dojo' object has no attribute 'all'

In [23]: print(all.Dojo)                                                        
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-23-4ca0c8db88b2> in <module>
----> 1 print(all.Dojo)

AttributeError: 'builtin_function_or_method' object has no attribute 'Dojo'


[1]+  Stopped                 python Desktop/Dojo_assignments/python_stack/django/django_orm/dojo_ninjas_proj/manage.py shell
(newDjango) zackary@Zackary-Ubuntu:~$ python Desktop/Dojo_assignments/python_stack/django/django_orm/dojo_ninjas_proj/manage.py shell
Python 3.7.4 (default, Oct 13 2019, 14:46:54) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.9.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from apps.dojo_ninjas_app.models import *                               

In [2]: Ninja.objects.create(last_name="myers", first_name="Christen")          
---------------------------------------------------------------------------
IntegrityError                            Traceback (most recent call last)
~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     63             else:
---> 64                 return self.cursor.execute(sql, params)
     65 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py in execute(self, query, params)
    336         query = self.convert_query(query)
--> 337         return Database.Cursor.execute(self, query, params)
    338 

IntegrityError: NOT NULL constraint failed: dojo_ninjas_app_ninja.dojo_id

The above exception was the direct cause of the following exception:

IntegrityError                            Traceback (most recent call last)
<ipython-input-2-0b0adddc4d3f> in <module>
----> 1 Ninja.objects.create(last_name="myers", first_name="Christen")

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/query.py in create(self, **kwargs)
    397         obj = self.model(**kwargs)
    398         self._for_write = True
--> 399         obj.save(force_insert=True, using=self.db)
    400         return obj
    401 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in save(self, force_insert, force_update, using, update_fields)
    794 
    795         self.save_base(using=using, force_insert=force_insert,
--> 796                        force_update=force_update, update_fields=update_fields)
    797     save.alters_data = True
    798 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in save_base(self, raw, force_insert, force_update, using, update_fields)
    822             if not raw:
    823                 self._save_parents(cls, using, update_fields)
--> 824             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
    825         # Store the database on which the object was saved
    826         self._state.db = using

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in _save_table(self, raw, cls, force_insert, force_update, using, update_fields)
    906 
    907             update_pk = bool(meta.has_auto_field and not pk_set)
--> 908             result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
    909             if update_pk:
    910                 setattr(self, meta.pk.attname, result)

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in _do_insert(self, manager, using, fields, update_pk, raw)
    945         """
    946         return manager._insert([self], fields=fields, return_id=update_pk,
--> 947                                using=using, raw=raw)
    948 
    949     def delete(self, using=None, keep_parents=False):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/query.py in _insert(self, objs, fields, return_id, raw, using)
   1041         query = sql.InsertQuery(self.model)
   1042         query.insert_values(fields, objs, raw=raw)
-> 1043         return query.get_compiler(using=using).execute_sql(return_id)
   1044     _insert.alters_data = True
   1045     _insert.queryset_only = False

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/sql/compiler.py in execute_sql(self, return_id)
   1052         with self.connection.cursor() as cursor:
   1053             for sql, params in self.as_sql():
-> 1054                 cursor.execute(sql, params)
   1055             if not (return_id and cursor):
   1056                 return

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     77         start = time()
     78         try:
---> 79             return super(CursorDebugWrapper, self).execute(sql, params)
     80         finally:
     81             stop = time()

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     62                 return self.cursor.execute(sql)
     63             else:
---> 64                 return self.cursor.execute(sql, params)
     65 
     66     def executemany(self, sql, param_list):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/utils.py in __exit__(self, exc_type, exc_value, traceback)
     92                 if dj_exc_type not in (DataError, IntegrityError):
     93                     self.wrapper.errors_occurred = True
---> 94                 six.reraise(dj_exc_type, dj_exc_value, traceback)
     95 
     96     def __call__(self, func):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/utils/six.py in reraise(tp, value, tb)
    683             value = tp()
    684         if value.__traceback__ is not tb:
--> 685             raise value.with_traceback(tb)
    686         raise value
    687 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     62                 return self.cursor.execute(sql)
     63             else:
---> 64                 return self.cursor.execute(sql, params)
     65 
     66     def executemany(self, sql, param_list):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py in execute(self, query, params)
    335             return Database.Cursor.execute(self, query)
    336         query = self.convert_query(query)
--> 337         return Database.Cursor.execute(self, query, params)
    338 
    339     def executemany(self, query, param_list):

IntegrityError: NOT NULL constraint failed: dojo_ninjas_app_ninja.dojo_id

In [3]: from apps.dojo_ninjas_app.models import *                               

In [4]: Ninja.objects.create(last_name="myers", first_name="Christen")          
---------------------------------------------------------------------------
IntegrityError                            Traceback (most recent call last)
~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     63             else:
---> 64                 return self.cursor.execute(sql, params)
     65 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py in execute(self, query, params)
    336         query = self.convert_query(query)
--> 337         return Database.Cursor.execute(self, query, params)
    338 

IntegrityError: NOT NULL constraint failed: dojo_ninjas_app_ninja.dojo_id

The above exception was the direct cause of the following exception:

IntegrityError                            Traceback (most recent call last)
<ipython-input-4-0b0adddc4d3f> in <module>
----> 1 Ninja.objects.create(last_name="myers", first_name="Christen")

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/query.py in create(self, **kwargs)
    397         obj = self.model(**kwargs)
    398         self._for_write = True
--> 399         obj.save(force_insert=True, using=self.db)
    400         return obj
    401 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in save(self, force_insert, force_update, using, update_fields)
    794 
    795         self.save_base(using=using, force_insert=force_insert,
--> 796                        force_update=force_update, update_fields=update_fields)
    797     save.alters_data = True
    798 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in save_base(self, raw, force_insert, force_update, using, update_fields)
    822             if not raw:
    823                 self._save_parents(cls, using, update_fields)
--> 824             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
    825         # Store the database on which the object was saved
    826         self._state.db = using

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in _save_table(self, raw, cls, force_insert, force_update, using, update_fields)
    906 
    907             update_pk = bool(meta.has_auto_field and not pk_set)
--> 908             result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
    909             if update_pk:
    910                 setattr(self, meta.pk.attname, result)

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/base.py in _do_insert(self, manager, using, fields, update_pk, raw)
    945         """
    946         return manager._insert([self], fields=fields, return_id=update_pk,
--> 947                                using=using, raw=raw)
    948 
    949     def delete(self, using=None, keep_parents=False):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/query.py in _insert(self, objs, fields, return_id, raw, using)
   1041         query = sql.InsertQuery(self.model)
   1042         query.insert_values(fields, objs, raw=raw)
-> 1043         return query.get_compiler(using=using).execute_sql(return_id)
   1044     _insert.alters_data = True
   1045     _insert.queryset_only = False

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/sql/compiler.py in execute_sql(self, return_id)
   1052         with self.connection.cursor() as cursor:
   1053             for sql, params in self.as_sql():
-> 1054                 cursor.execute(sql, params)
   1055             if not (return_id and cursor):
   1056                 return

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     77         start = time()
     78         try:
---> 79             return super(CursorDebugWrapper, self).execute(sql, params)
     80         finally:
     81             stop = time()

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     62                 return self.cursor.execute(sql)
     63             else:
---> 64                 return self.cursor.execute(sql, params)
     65 
     66     def executemany(self, sql, param_list):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/utils.py in __exit__(self, exc_type, exc_value, traceback)
     92                 if dj_exc_type not in (DataError, IntegrityError):
     93                     self.wrapper.errors_occurred = True
---> 94                 six.reraise(dj_exc_type, dj_exc_value, traceback)
     95 
     96     def __call__(self, func):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/utils/six.py in reraise(tp, value, tb)
    683             value = tp()
    684         if value.__traceback__ is not tb:
--> 685             raise value.with_traceback(tb)
    686         raise value
    687 

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/utils.py in execute(self, sql, params)
     62                 return self.cursor.execute(sql)
     63             else:
---> 64                 return self.cursor.execute(sql, params)
     65 
     66     def executemany(self, sql, param_list):

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/backends/sqlite3/base.py in execute(self, query, params)
    335             return Database.Cursor.execute(self, query)
    336         query = self.convert_query(query)
--> 337         return Database.Cursor.execute(self, query, params)
    338 
    339     def executemany(self, query, param_list):

IntegrityError: NOT NULL constraint failed: dojo_ninjas_app_ninja.dojo_id

In [5]: get = Dojo.objects.create(name='hooman', city="here", state="California"
   ...: )                                                                       

In [6]: get2 = Dojo.objects.create(name='hooman', city="here", state="stuff")   

In [7]:                                                                         

In [7]: things=Dojo.objects.all()                                               

In [8]: print things                                                            
  File "<ipython-input-8-ca8ac67f66e4>", line 1
    print things
               ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(things)?


In [9]: print things()                                                          
  File "<ipython-input-9-4f99d5ca151a>", line 1
    print things()
               ^
SyntaxError: invalid syntax


In [10]: print (things)                                                         
<QuerySet [<Dojo: Dojo object>, <Dojo: Dojo object>, <Dojo: Dojo object>]>

In [11]: print (things.value)                                                   
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-11-7cb5e8f54048> in <module>
----> 1 print (things.value)

AttributeError: 'QuerySet' object has no attribute 'value'

In [12]: things.nane                                                            
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-12-89e54660cc43> in <module>
----> 1 things.nane

AttributeError: 'QuerySet' object has no attribute 'nane'

In [13]: get.nanme                                                              
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-13-0fe509284903> in <module>
----> 1 get.nanme

AttributeError: 'Dojo' object has no attribute 'nanme'

In [14]: get.nanme                                                              
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-14-0fe509284903> in <module>
----> 1 get.nanme

AttributeError: 'Dojo' object has no attribute 'nanme'

In [15]: get.nane                                                               
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-15-dc42219c6bba> in <module>
----> 1 get.nane

AttributeError: 'Dojo' object has no attribute 'nane'

In [16]: get.name                                                               
Out[16]: 'hooman'

In [17]: get.Ninjas                                                             
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-17-3946ce7fb5f6> in <module>
----> 1 get.Ninjas

AttributeError: 'Dojo' object has no attribute 'Ninjas'

In [18]: get.this2                                                              
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-18-7027ef31a140> in <module>
----> 1 get.this2

AttributeError: 'Dojo' object has no attribute 'this2'

In [19]: things = Dojo.objects.get(name=zack)                                   
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-19-c8209f19c7c3> in <module>
----> 1 things = Dojo.objects.get(name=zack)

NameError: name 'zack' is not defined

In [20]: things = Dojo.objects.get(name=oak)                                    
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-20-9dcdc526da9c> in <module>
----> 1 things = Dojo.objects.get(name=oak)

NameError: name 'oak' is not defined

In [21]: things = Dojo.objects.get(id=1)                                        
---------------------------------------------------------------------------
DoesNotExist                              Traceback (most recent call last)
<ipython-input-21-984b6c172fde> in <module>
----> 1 things = Dojo.objects.get(id=1)

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/query.py in get(self, *args, **kwargs)
    383             raise self.model.DoesNotExist(
    384                 "%s matching query does not exist." %
--> 385                 self.model._meta.object_name
    386             )
    387         raise self.model.MultipleObjectsReturned(

DoesNotExist: Dojo matching query does not exist.

In [22]: things = Dojo.objects.get(id=2)                                        
---------------------------------------------------------------------------
DoesNotExist                              Traceback (most recent call last)
<ipython-input-22-943020aec106> in <module>
----> 1 things = Dojo.objects.get(id=2)

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

~/Desktop/Dojo_assignments/python_stack/my_environments/newDjango/lib/python3.7/site-packages/django/db/models/query.py in get(self, *args, **kwargs)
    383             raise self.model.DoesNotExist(
    384                 "%s matching query does not exist." %
--> 385                 self.model._meta.object_name
    386             )
    387         raise self.model.MultipleObjectsReturned(

DoesNotExist: Dojo matching query does not exist.

In [23]: things = Dojo.objects.get(city=oak)                                    
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-23-00030dad90b8> in <module>
----> 1 things = Dojo.objects.get(city=oak)

NameError: name 'oak' is not defined

In [24]: print(Dojo)                                                            
<class 'apps.dojo_ninjas_app.models.Dojo'>

In [25]: print(Dojo.value)                                                      
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-25-e18744691276> in <module>
----> 1 print(Dojo.value)

AttributeError: type object 'Dojo' has no attribute 'value'

In [26]: print(Dojo.city)                                                       
<django.db.models.query_utils.DeferredAttribute object at 0x7f610377e950>

In [27]: Dojo.city                                                              
Out[27]: <django.db.models.query_utils.DeferredAttribute at 0x7f610377e950>

In [28]: Ninjas.objects.create(dojo_id = "1", first_name = "Shploop", last_name 
    ...: = "thisnthat")                                                         
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-28-bf287864c18b> in <module>
----> 1 Ninjas.objects.create(dojo_id = "1", first_name = "Shploop", last_name = "thisnthat")

NameError: name 'Ninjas' is not defined

In [29]: from apps.dojo_ninjas_app import *                                     

In [30]: Ninjas.objects.create(dojo_id = "1", first_name = "Shploop", last_name 
    ...: = "thisnthat")                                                         
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-30-bf287864c18b> in <module>
----> 1 Ninjas.objects.create(dojo_id = "1", first_name = "Shploop", last_name = "thisnthat")

NameError: name 'Ninjas' is not defined

In [31]: Ninja.objects.create(dojo_id = "1", first_name = "Shploop", last_name =
    ...:  "thisnthat")                                                          
Out[31]: <Ninja: Ninja object>

In [32]: Ninja.objects.create(dojo_id = "1", first_name = "Shploop", last_name =
    ...:  "thisnthat")                                                          
Out[32]: <Ninja: Ninja object>

In [33]: Ninja.objects.create(dojo_id = "1", first_name = "Shplffoop", last_name
    ...:  = "thisnthffat")                                                      
Out[33]: <Ninja: Ninja object>

In [34]: Ninja.objects.create(dojo_id = "1", first_name = "Shplffffffoop", last_
    ...: name = "thffffisnthffat")                                              
Out[34]: <Ninja: Ninja object>

In [35]: Ninja.objects.create(dojo_id = "3", first_name ="Janae", last_name ="St
    ...: uart")                                                                 
Out[35]: <Ninja: Ninja object>

In [36]: Ninja.objects.exclude(dojo_id = 2)                                     
Out[36]: <QuerySet [<Ninja: Ninja object>, <Ninja: Ninja object>, <Ninja: Ninja object>, <Ninja: Ninja object>, <Ninja: Ninja object>]>

In [37]:                                                                        